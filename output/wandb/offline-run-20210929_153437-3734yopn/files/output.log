self.testlib:  [5, 5, 5, 5, 5, 5, 5, 5, 4, 5, 5, 4, 5, 5, 5, 5, 5, 4, 4, 4, 5, 5, 4, 5, 5, 4, 4, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 5, 5, 5, 3, 3, 5, 3, 5, 5, 5, 4, 5, 5, 5, 3, 5, 5, 4, 4, 5, 5, 3, 4]
[32m2021-09-29 15:34:42.574[39m | [1mINFO[22m | [90m/home/avsp/Masa√ºst√º/Multi-Agent-Allocation-with-Generative-Network/environment/level_utils.py:75[39m | Tokens in level ['-', 'W', 'X']
Library size increased: 1
Traceback (most recent call last):
  File "main.py", line 188, in <module>
    main()
  File "main.py", line 68, in main
    testc_labeled = classifier.predict(L.test_library)
  File "/home/avsp/Masa√ºst√º/Multi-Agent-Allocation-with-Generative-Network/classifier.py", line 111, in predict
    testCorrect = (np.array(pred).argmax(1) == np.array(Y_c.argmax(1))).sum().item()
  File "/home/avsp/.local/lib/python3.6/site-packages/torch/tensor.py", line 492, in __array__
    return self.numpy()
TypeError: can't convert cuda:0 device type tensor to numpy. Use Tensor.cpu() to copy the tensor to host memory first.