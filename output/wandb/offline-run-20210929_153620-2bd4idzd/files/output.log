self.testlib:  [5, 5, 5, 5, 5, 5, 5, 5, 4, 5, 5, 4, 5, 5, 5, 5, 5, 4, 4, 4, 5, 5, 4, 5, 5, 4, 4, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 5, 5, 5, 3, 3, 5, 3, 5, 5, 5, 4, 5, 5, 5, 3, 5, 5, 4, 4, 5, 5, 3, 4]
[32m2021-09-29 15:36:25.969[39m | [1mINFO[22m | [90m/home/avsp/Masa√ºst√º/Multi-Agent-Allocation-with-Generative-Network/environment/level_utils.py:75[39m | Tokens in level ['-', 'W', 'X']
Library size increased: 1
MODE: train
  0%|                                                                                                           | 0/15 [00:00<?, ?it/s]
Traceback (most recent call last):
  File "main.py", line 188, in <module>
    main()
  File "main.py", line 91, in main
    generated_map = g.train(e, sample_map, classifier, opt)
  File "/home/avsp/Masa√ºst√º/Multi-Agent-Allocation-with-Generative-Network/train.py", line 72, in train
    output_r = self.D(real).to(opt.device)
  File "/home/avsp/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 550, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/avsp/Masa√ºst√º/Multi-Agent-Allocation-with-Generative-Network/models/discriminator.py", line 28, in forward
    x = self.head(x)
  File "/home/avsp/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 550, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/avsp/.local/lib/python3.6/site-packages/torch/nn/modules/container.py", line 100, in forward
    input = module(input)
  File "/home/avsp/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 550, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/avsp/.local/lib/python3.6/site-packages/torch/nn/modules/conv.py", line 349, in forward
    return self._conv_forward(input, self.weight)
  File "/home/avsp/.local/lib/python3.6/site-packages/torch/nn/modules/conv.py", line 346, in _conv_forward
    self.padding, self.dilation, self.groups)
RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same