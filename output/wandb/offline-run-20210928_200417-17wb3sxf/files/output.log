self.testlib:  [5, 5, 5, 5, 5, 5, 5, 5, 4, 5, 5, 4, 5, 5, 5, 5, 5, 4, 4, 4, 5, 5, 4, 5, 5, 4, 4, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 5, 5, 5, 3, 3, 5, 3, 5, 5, 5, 4, 5, 5, 5, 3, 5, 5, 4, 4, 5, 5, 3, 4]
[32m2021-09-28 20:04:22.968[39m | [1mINFO[22m | [90m/home/av/Desktop/Multi-Agent-Allocation-with-Generative-Network/environment/level_utils.py:75[39m | Tokens in level ['-', 'W', 'X']
map shape torch.Size([1, 3, 20, 20])
Library size increased: 1
MODE: train
Traceback (most recent call last):
  File "main.py", line 188, in <module>
    main()
  File "main.py", line 80, in main
    training_loss, trainc_labeled = classifier.trainer(L.train_library, optimizer)
  File "/home/av/Desktop/Multi-Agent-Allocation-with-Generative-Network/classifier.py", line 80, in trainer
    pred = self.forward(X.float())
  File "/home/av/Desktop/Multi-Agent-Allocation-with-Generative-Network/classifier.py", line 52, in forward
    x = self.fc1(x)
  File "/home/av/anaconda3/envs/gpn/lib/python3.7/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/av/anaconda3/envs/gpn/lib/python3.7/site-packages/torch/nn/modules/linear.py", line 91, in forward
    return F.linear(input, self.weight, self.bias)
  File "/home/av/anaconda3/envs/gpn/lib/python3.7/site-packages/torch/nn/functional.py", line 1674, in linear
    ret = torch.addmm(bias, input, weight.t())
RuntimeError: size mismatch, m1: [1 x 200], m2: [2450 x 500] at /pytorch/aten/src/TH/generic/THTensorMath.cpp:41